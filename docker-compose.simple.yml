version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-menshen_db}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - menshun_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - menshun_network

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    ports:
      - "8000:8000"
    environment:
      # Django Settings
      - DJANGO_SETTINGS_MODULE=menshen.settings.production
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      
      # Database Configuration
      - DATABASE_NAME=${DATABASE_NAME:-menshen_db}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      
      # Microsoft Azure AD Configuration
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_REDIRECT_URI=${AZURE_REDIRECT_URI}
      
      # Security Settings
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-false}
      - SECURE_HSTS_SECONDS=${SECURE_HSTS_SECONDS:-0}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-false}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-false}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menshun_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    command: celery -A menshen worker -l info --concurrency=4
    volumes:
      - media_files:/app/media
    environment:
      # Django Settings
      - DJANGO_SETTINGS_MODULE=menshen.settings.production
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      
      # Database Configuration
      - DATABASE_NAME=${DATABASE_NAME:-menshen_db}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menshun_network

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/sites-available/menshun-simple.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/var/www/menshun/static:ro
      - media_files:/var/www/menshun/media:ro
    depends_on:
      - web
    networks:
      - menshun_network

networks:
  menshun_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files: