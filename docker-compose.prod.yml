version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ${HOME}/opt/menshun/backups/postgres:/backups
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-menshen_db}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "127.0.0.1:5436:5432"  # Only bind to localhost
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "127.0.0.1:6383:6379"  # Only bind to localhost
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ${HOME}/opt/menshun/logs:/app/logs
      - ${HOME}/opt/menshun/ssl:/app/ssl:ro
    environment:
      # Django Settings
      - DJANGO_SETTINGS_MODULE=menshen.settings.production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      
      # Database Configuration
      - DATABASE_NAME=${DATABASE_NAME:-menshen_db}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      
      # Microsoft Azure AD Configuration
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_REDIRECT_URI=${AZURE_REDIRECT_URI}
      
      # Entra Group Mappings
      - MENSHEN_VAULT_ADMIN_GROUP=${MENSHEN_VAULT_ADMIN_GROUP:-Menshen_Vault_Admin}
      - MENSHEN_VAULT_EDITOR_GROUP=${MENSHEN_VAULT_EDITOR_GROUP:-Menshen_Vault_Editor}
      - MENSHEN_VAULT_VIEWER_GROUP=${MENSHEN_VAULT_VIEWER_GROUP:-Menshen_Vault_Viewer}
      
      # Microsoft Sentinel Integration
      - SENTINEL_ENABLED=${SENTINEL_ENABLED:-false}
      - SENTINEL_WORKSPACE_ID=${SENTINEL_WORKSPACE_ID}
      - SENTINEL_DATA_COLLECTION_ENDPOINT=${SENTINEL_DATA_COLLECTION_ENDPOINT}
      - SENTINEL_DATA_COLLECTION_RULE_ID=${SENTINEL_DATA_COLLECTION_RULE_ID}
      - SENTINEL_STREAM_NAME=${SENTINEL_STREAM_NAME:-Custom-MenshunPAM_CL}
      - SENTINEL_CONNECTOR_TYPE=${SENTINEL_CONNECTOR_TYPE:-LOG_ANALYTICS}
      - SENTINEL_BATCH_SIZE=${SENTINEL_BATCH_SIZE:-10}
      - SENTINEL_BATCH_TIMEOUT=${SENTINEL_BATCH_TIMEOUT:-30}
      - SENTINEL_SEND_AUTH_EVENTS=${SENTINEL_SEND_AUTH_EVENTS:-true}
      - SENTINEL_SEND_VAULT_EVENTS=${SENTINEL_SEND_VAULT_EVENTS:-true}
      - SENTINEL_SEND_SERVICE_IDENTITY_EVENTS=${SENTINEL_SEND_SERVICE_IDENTITY_EVENTS:-true}
      - SENTINEL_SEND_PRIVILEGED_ACCESS_EVENTS=${SENTINEL_SEND_PRIVILEGED_ACCESS_EVENTS:-true}
      
      # Security Settings
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-true}
      - SECURE_HSTS_SECONDS=${SECURE_HSTS_SECONDS:-31536000}
      - SESSION_COOKIE_SECURE=true
      - CSRF_COOKIE_SECURE=true
      
      # Email Configuration (Optional)
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-true}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SENTRY_DSN=${SENTRY_DSN}
      
      # Performance Settings
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-4}
      - GUNICORN_THREADS=${GUNICORN_THREADS:-2}
      - GUNICORN_MAX_REQUESTS=${GUNICORN_MAX_REQUESTS:-1000}
      - GUNICORN_MAX_REQUESTS_JITTER=${GUNICORN_MAX_REQUESTS_JITTER:-100}
      
    ports:
      - "127.0.0.1:8003:8000"  # Only bind to localhost (behind Nginx)
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    command: celery -A menshen worker -l info --concurrency=4
    volumes:
      - media_files:/app/media
      - ${HOME}/opt/menshun/logs:/app/logs
    environment:
      # Django Settings
      - DJANGO_SETTINGS_MODULE=menshen.settings.production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      
      # Database Configuration
      - DATABASE_NAME=${DATABASE_NAME:-menshen_db}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      
      # Microsoft Azure AD Configuration
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "celery", "-A", "menshen", "inspect", "ping"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    command: celery -A menshen beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - media_files:/app/media
      - ${HOME}/opt/menshun/logs:/app/logs
    environment:
      # Django Settings
      - DJANGO_SETTINGS_MODULE=menshen.settings.production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      
      # Database Configuration
      - DATABASE_NAME=${DATABASE_NAME:-menshen_db}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/sites-available/menshun.conf:/etc/nginx/conf.d/menshun.conf:ro
      - ${HOME}/opt/menshun/ssl:/etc/nginx/ssl:ro
      - static_files:/var/www/menshun/static:ro
      - media_files:/var/www/menshun/media:ro
      - ${HOME}/opt/menshun/logs/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - menshun_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  menshun_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/opt/menshun/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/opt/menshun/data/redis
  static_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/opt/menshun/data/static
  media_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/opt/menshun/data/media