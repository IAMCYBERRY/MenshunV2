# Generated by Django 5.2.4 on 2025-07-22 18:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vault', '0004_add_admin_account_tagging'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('service_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('account_type', models.CharField(choices=[('AUTOMATION', 'Automation Account'), ('INTEGRATION', 'Integration Account'), ('MONITORING', 'Monitoring Account'), ('BACKUP', 'Backup Account'), ('API', 'API Service Account')], default='AUTOMATION', max_length=20)),
                ('entra_user_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('user_principal_name', models.CharField(max_length=255, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('job_title', models.CharField(default='Service Account', max_length=255)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_type', models.CharField(default='Automation', max_length=50)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DISABLED', 'Disabled'), ('PENDING', 'Pending Creation'), ('EXPIRED', 'Expired'), ('SUSPENDED', 'Suspended')], default='PENDING', max_length=20)),
                ('password_last_set', models.DateTimeField(blank=True, null=True)),
                ('password_expires_at', models.DateTimeField(blank=True, null=True)),
                ('next_rotation_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_service_accounts', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_service_accounts', to='vault.entrauser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_service_accounts', to=settings.AUTH_USER_MODEL)),
                ('vault_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_account', to='vault.vaultentry')),
            ],
            options={
                'db_table': 'vault_serviceaccount',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePrincipal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('application_type', models.CharField(choices=[('WEB', 'Web Application'), ('SPA', 'Single Page Application'), ('NATIVE', 'Native Application'), ('API', 'API Application'), ('DAEMON', 'Daemon/Service Application')], max_length=20)),
                ('entra_app_id', models.CharField(max_length=255, unique=True)),
                ('entra_object_id', models.CharField(max_length=255, unique=True)),
                ('client_id', models.CharField(max_length=255)),
                ('tenant_id', models.CharField(max_length=255)),
                ('home_page_url', models.URLField(blank=True, null=True)),
                ('redirect_uris', models.JSONField(blank=True, default=list)),
                ('app_roles', models.JSONField(blank=True, default=list)),
                ('api_permissions', models.JSONField(blank=True, default=list)),
                ('delegated_permissions', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DISABLED', 'Disabled'), ('PENDING', 'Pending Creation'), ('EXPIRED', 'Expired'), ('SUSPENDED', 'Suspended')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_identity_service_principals', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_identity_service_principals', to=settings.AUTH_USER_MODEL)),
                ('service_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_principals', to='vault.serviceaccount')),
                ('vault_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_principal', to='vault.vaultentry')),
            ],
            options={
                'db_table': 'vault_serviceprincipal',
                'ordering': ['application_name'],
            },
        ),
        migrations.CreateModel(
            name='ServicePrincipalSecret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_type', models.CharField(choices=[('CLIENT_SECRET', 'Client Secret'), ('CERTIFICATE', 'Certificate')], default='CLIENT_SECRET', max_length=20)),
                ('secret_id', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('secret_value', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('expires_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('REVOKED', 'Revoked'), ('PENDING_ROTATION', 'Pending Rotation')], default='ACTIVE', max_length=20)),
                ('rotation_scheduled', models.BooleanField(default=False)),
                ('rotation_date', models.DateTimeField(blank=True, null=True)),
                ('days_before_expiry_alert', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('service_principal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secrets', to='vault.serviceprincipal')),
                ('vault_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sp_secret', to='vault.vaultentry')),
            ],
            options={
                'db_table': 'vault_serviceprincipalsecret',
                'ordering': ['-created_at'],
                'unique_together': {('service_principal', 'secret_id')},
            },
        ),
    ]
